@use '../functions' as fn;
@use '../mixins' as mx;
@use '../placeholders';
@use '../variables/base';
@use '../variables/transition';
@use '../variables/color';

.c-list-navigation {
	@extend %reset-list;

	--spacing-inner-horizontal: #{fn.spacing(1)};
	--spacing-inner-vertical: #{fn.spacing(1)};

	@include mx.breakpoint(lg) {
		--spacing-inner-horizontal: #{fn.spacing(1.5)};
		--spacing-inner-vertical: calc(#{fn.spacing(1.5)} / 1.25);
	}

	color: #FFF;
	margin: {
		left: fn.negate(var(--spacing-inner-horizontal));
		right: fn.negate(var(--spacing-inner-horizontal));
	};

	&__link {
		--color-link-text: #FFF;
		--color-link-background: transparent;

		display: block;
		padding: var(--spacing-inner-vertical) var(--spacing-inner-horizontal);
		background-color: var(--color-link-background);
		text-decoration: none;
		border-radius: base.$corner-radius;
		transition-property: color, background-color;
		transition-duration: transition.$speed-fast;
		color: var(--color-link-text);

		&.is-active {
			--color-link-background: rgba(255, 255, 255, .08);

			font-weight: 600;
		}

		&:hover {
			--color-link-background: rgba(0, 0, 0, .2);
		}
	}

	&__item {

		&.has-children {
			--color-link-background: rgba(0, 0, 0, .2);

			background-color: color.$theme-dark;
			border-radius: base.$corner-radius;
			overflow: hidden;

			.c-list-navigation__link {

				&.is-active {
					--color-link-background: rgba(255, 255, 255, .15);
				}
			}

			& > .c-list-navigation__link {
				--color-link-background: rgba(0, 0, 0, .1);

				font-weight: 700;
				border-bottom-left-radius: 0;
				border-bottom-right-radius: 0;
			}
		}
	}

	&.is-child {
		margin: 0;
		display: none;

		.has-children & {
			display: inherit;
		}

		.c-list-navigation__link {
			border-radius: 0;
		}
	}
}
