@use 'sass:list' as s-list;
@use 'sass:string' as s-string;
@use 'sass:map' as s-map;

@use '../functions' as fn;


/// Adds fonts via @font-face
///
/// @param {String} $name Font-Name
/// @param {String} $path Path to font
/// @param {Number} $weight [null] Font-Weight
/// @param {String} $version [null] Font Version
/// @param {String} $unicode-range [''] Unicode Range
/// @param {String} $style [null] Font-Style
/// @param {List} $exts [woff2 woff] Font-Formats to add
/// @param {String} $display [swap] Display
///
/// @example
///    @include font-face(
///      'Open Sans',
///      '#{$path-to-fonts}/opensans/Light/OpenSans-Light',
///      300,
///      normal,
///      woff2 woff
///    );
///
@mixin font-face(
	$name,
	$path,
	$weight: null,
	$version: null,
	$unicode-range: '',
	$style: normal,
	$exts: woff2 woff,
	$display: swap
) {
	$src: null;

	@if $version {
		$version: '?v=' + $version;
	}

	@each $ext in $exts {
		$src: s-list.append($src, url('#{$path + '.' + $ext + $version}') format(s-string.quote($ext)), comma);
	}

	@font-face {
		font-family: s-string.quote($name);
		src: local($name), $src;
		font-weight: $weight;
		font-style: $style;
		font-display: $display;
		@if $unicode-range {
			unicode-range: s-string.unquote($unicode-range);
		}
	}
}
