@use 'sass:map';
@use 'sass:list';

@use '../variables/structure' as structure;

/// Breakpoint Mixin was vorher definierte Breakpoints (Map) nutzt und validiert
/// @param {String} $breakpoint Breakpoint key von der breakpoints map
/// @param {String} $direction ['min'] Richtung des @media Queries (min oder max)
/// @group Breakpoint
///
/// @example
///		.my-selector {
///			@include breakpoint(lg) {...}
///		}
///
/// @example css - Output CSS
///		@media (min-width: 1260px) {
///			.my-selector {...}
///		}
///
@mixin breakpoint($breakpoint, $direction: 'min') {

	// Error handling
	$valid-direction: (min, max);

	// Gebe einen Fehler aus wenn die Breakpointrichtung nicht stimmt
	@if not list.index($valid-direction, $direction) {
		@error '❌  ===> #{$direction} is not a valite option for direction. Please use: #{$valid-direction}';
	}

	// Gebe einen Fehler aus wenn es den Breakpoint nicht in der Map gibt
	@if map.has-key(structure.$breakpoints, $breakpoint) != true {
		@error '❌  ===> #{$breakpoint} is not valid breakpoint. Please use: #{map.keys(structure.$breakpoints)}';
	}

	// Suche und gebe den Key aus der Breakpoints Map wieder
	$get-breakpoints: map.get(structure.$breakpoints, $breakpoint);

	@if $direction == 'min' {
		@media (min-width: $get-breakpoints) {
			@content;
		}
	}

	@if $direction == 'max' {
		@media (max-width: ($get-breakpoints - 1)) {
			@content;
		}
	}
}
